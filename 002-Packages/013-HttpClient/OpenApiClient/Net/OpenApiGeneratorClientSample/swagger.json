{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "WebAPI Sample",
    "description": "這是一個 Web API 範例",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:5081"
    }
  ],
  "paths": {
    "/api/book/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "operationId": "Book_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBookResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Book"
        ],
        "operationId": "Book_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "book",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "operationId": "Book_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/book": {
      "get": {
        "tags": [
          "Book"
        ],
        "operationId": "Book_GetList",
        "parameters": [
          {
            "name": "Limit",
            "x-originalName": "limitText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Offset",
            "x-originalName": "offsetText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetBookResult"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book"
        ],
        "operationId": "Book_Add",
        "requestBody": {
          "x-name": "book",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "book",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserResuest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "User_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetList",
        "parameters": [
          {
            "name": "Limit",
            "x-originalName": "limitText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Offset",
            "x-originalName": "offsetText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetUserResult"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Add",
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/token": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_GenerateToken",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "Password": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id}/actived": {
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateActived",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "activedInfo",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivedRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/user/{id}/avatar": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_UploadAvatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Avatar": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetBookResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Book"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "Book": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "episode": {
            "type": "integer",
            "format": "int32"
          },
          "author": {
            "$ref": "#/components/schemas/Author"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          },
          "isReprint": {
            "type": "boolean"
          }
        }
      },
      "Author": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "uid": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AddBookResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "AddBookRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Book"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UpdateBookRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Book"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "GetUserResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "additionalProperties": {},
            "properties": {
              "password": {
                "type": "string"
              }
            }
          }
        ]
      },
      "User": {
        "type": "object",
        "additionalProperties": {},
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "isActived": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserTokenResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "token": {
            "type": "string"
          },
          "expiredDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AddUserResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AddUserRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "additionalProperties": {},
            "properties": {
              "id": {
                "type": "string",
                "format": "guid"
              }
            }
          }
        ]
      },
      "UpdateUserResuest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "additionalProperties": {}
          }
        ]
      },
      "UpdateActivedRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isActived": {
            "type": "boolean"
          }
        }
      },
      "UpdateAvatarResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      }
    }
  }
}