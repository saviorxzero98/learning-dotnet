/*
 * WebAPI Sample
 *
 * 這是一個 Web API 範例
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AddBookRequest
    /// </summary>
    [DataContract(Name = "AddBookRequest")]
    public partial class AddBookRequest : IEquatable<AddBookRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddBookRequest" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="episode">episode.</param>
        /// <param name="author">author.</param>
        /// <param name="price">price.</param>
        /// <param name="publishDate">publishDate.</param>
        /// <param name="isReprint">isReprint.</param>
        public AddBookRequest(string id = default(string), string name = default(string), int episode = default(int), Author author = default(Author), double price = default(double), DateTime publishDate = default(DateTime), bool isReprint = default(bool))
        {
            this.Id = id;
            this.Name = name;
            this.Episode = episode;
            this.Author = author;
            this.Price = price;
            this.PublishDate = publishDate;
            this.IsReprint = isReprint;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Episode
        /// </summary>
        [DataMember(Name = "episode", EmitDefaultValue = false)]
        public int Episode { get; set; }

        /// <summary>
        /// Gets or Sets Author
        /// </summary>
        [DataMember(Name = "author", EmitDefaultValue = false)]
        public Author Author { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public double Price { get; set; }

        /// <summary>
        /// Gets or Sets PublishDate
        /// </summary>
        [DataMember(Name = "publishDate", EmitDefaultValue = false)]
        public DateTime PublishDate { get; set; }

        /// <summary>
        /// Gets or Sets IsReprint
        /// </summary>
        [DataMember(Name = "isReprint", EmitDefaultValue = true)]
        public bool IsReprint { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AddBookRequest {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Episode: ").Append(Episode).Append("\n");
            sb.Append("  Author: ").Append(Author).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  PublishDate: ").Append(PublishDate).Append("\n");
            sb.Append("  IsReprint: ").Append(IsReprint).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddBookRequest);
        }

        /// <summary>
        /// Returns true if AddBookRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AddBookRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddBookRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Episode == input.Episode ||
                    this.Episode.Equals(input.Episode)
                ) && 
                (
                    this.Author == input.Author ||
                    (this.Author != null &&
                    this.Author.Equals(input.Author))
                ) && 
                (
                    this.Price == input.Price ||
                    this.Price.Equals(input.Price)
                ) && 
                (
                    this.PublishDate == input.PublishDate ||
                    (this.PublishDate != null &&
                    this.PublishDate.Equals(input.PublishDate))
                ) && 
                (
                    this.IsReprint == input.IsReprint ||
                    this.IsReprint.Equals(input.IsReprint)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Episode.GetHashCode();
                if (this.Author != null)
                {
                    hashCode = (hashCode * 59) + this.Author.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Price.GetHashCode();
                if (this.PublishDate != null)
                {
                    hashCode = (hashCode * 59) + this.PublishDate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsReprint.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
