
using Refit;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading.Tasks;

namespace RefitterApiClient
{
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "0.8.7.0")]
    public partial interface IWebAPISample
    {
        [Headers("Accept: application/json")]
        [Get("/api/book/{id}")]
        Task<IApiResponse<GetBookResult>> BookGet(string id);

        [Put("/api/book/{id}")]
        Task<IApiResponse> BookPut(string id, [Body] UpdateBookRequest book);

        [Delete("/api/book/{id}")]
        Task<IApiResponse> BookDelete(string id);

        [Headers("Accept: application/json")]
        [Get("/api/book")]
        Task<IApiResponse<ICollection<GetBookResult>>> BookGet([Query, AliasAs("Limit")] string limitText, [Query, AliasAs("Offset")] string offsetText);

        [Headers("Accept: application/json")]
        [Post("/api/book")]
        Task<IApiResponse<AddBookResult>> BookPost([Body] AddBookRequest book);

        [Headers("Accept: application/json")]
        [Get("/api/user/{id}")]
        Task<IApiResponse<GetUserResult>> UserGet(string id);

        [Put("/api/user/{id}")]
        Task<IApiResponse> UserPut(string id, [Body] UpdateUserResuest book);

        [Delete("/api/user/{id}")]
        Task<IApiResponse> UserDelete(string id);

        [Headers("Accept: application/json")]
        [Get("/api/user")]
        Task<IApiResponse<ICollection<GetUserResult>>> UserGet([Query, AliasAs("Limit")] string limitText, [Query, AliasAs("Offset")] string offsetText);

        [Headers("Accept: application/json")]
        [Post("/api/user")]
        Task<IApiResponse<AddUserResult>> UserPost([Body] AddUserRequest user);

        [Multipart]
        [Headers("Accept: application/json")]
        [Post("/api/user/token")]
        Task<IApiResponse<UserTokenResult>> Token();

        [Patch("/api/user/{id}/actived")]
        Task<IApiResponse> Actived(string id, [Body] UpdateActivedRequest activedInfo);

        [Multipart]
        [Headers("Accept: application/json")]
        [Post("/api/user/{id}/avatar")]
        Task<IApiResponse<UpdateAvatarResult>> Avatar(string id, [AliasAs("Avatar")]StreamPart avatar);


    }
}


//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"

namespace RefitterApiClient
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class GetBookResult : Book
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Book
    {

        [JsonPropertyName("id")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

        [JsonPropertyName("name")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Name { get; set; }

        [JsonPropertyName("episode")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public int Episode { get; set; }

        [JsonPropertyName("author")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public Author Author { get; set; }

        [JsonPropertyName("price")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public double Price { get; set; }

        [JsonPropertyName("publishDate")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset PublishDate { get; set; }

        [JsonPropertyName("isReprint")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsReprint { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class Author
    {

        [JsonPropertyName("uid")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public int Uid { get; set; }

        [JsonPropertyName("name")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Name { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AddBookResult
    {

        [JsonPropertyName("id")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AddBookRequest : Book
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UpdateBookRequest : Book
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class GetUserResult : User
    {

        [JsonPropertyName("password")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Password { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class User
    {

        [JsonPropertyName("id")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid Id { get; set; }

        [JsonPropertyName("name")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Name { get; set; }

        [JsonPropertyName("password")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Password { get; set; }

        [JsonPropertyName("type")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public int Type { get; set; }

        [JsonPropertyName("isActived")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsActived { get; set; }

        [JsonPropertyName("createDate")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset CreateDate { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UserTokenResult
    {

        [JsonPropertyName("id")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid Id { get; set; }

        [JsonPropertyName("token")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string Token { get; set; }

        [JsonPropertyName("expiredDate")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset ExpiredDate { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AddUserResult
    {

        [JsonPropertyName("id")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid Id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class AddUserRequest : User
    {

        [JsonPropertyName("id")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid Id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UpdateUserResuest : User
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UpdateActivedRequest
    {

        [JsonPropertyName("isActived")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public bool IsActived { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class UpdateAvatarResult
    {

        [JsonPropertyName("userId")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string UserId { get; set; }

        [JsonPropertyName("avatarUrl")]

        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]   
        public string AvatarUrl { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    public partial class FileParameter
    {
        public FileParameter(System.IO.Stream data)
            : this (data, null, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName)
            : this (data, fileName, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName, string contentType)
        {
            Data = data;
            FileName = fileName;
            ContentType = contentType;
        }

        public System.IO.Stream Data { get; private set; }

        public string FileName { get; private set; }

        public string ContentType { get; private set; }
    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604